import ROOT
import os
from scipy import stats
import numpy as np
def plot(hist, title,ch, outDir):
    # Canvas and general style options
    #ROOT.gStyle.SetOptStat(0)
    ROOT.gStyle.SetTextFont(42)
    d = ROOT.TCanvas("", "", 800, 700)
    # Make sure the canvas stays in the list of canvases after the macro execution
    ROOT.SetOwnership(d, False)
    d.SetLeftMargin(0.15)
    hist.SetTitle("")
    hist.GetXaxis().SetTitleSize(0.04)
    hist.GetYaxis().SetTitleSize(0.04)
    hist.SetLineWidth(2)
    #hist.SetMaximum(18)
    hist.SetLineWidth(2)
    hist.SetFillStyle(1001)
    hist.SetLineColor(ROOT.kBlack)
    hist.SetFillColor(ROOT.kAzure - 9)

    # Draw histograms
    hist.SetTitle(title)
    hist.SetName(title)
    hist.Draw("HIST")

    # Add legend
    legend = ROOT.TLegend(0.62, 0.70, 0.82, 0.88)
    legend.SetHeader(title)
    #legend.SetFillColor(0)
    #legend.SetBorderSize(0)
    #legend.SetTextSize(0.03)
    #legend.AddEntry(hist, "ZZ", "f")
    #legend.Draw()

    # Add header
    #cms_label = ROOT.TLatex()
    #cms_label.SetTextSize(0.04)
    #cms_label.DrawLatexNDC(0.16, 0.92, "#bf{CMS Open Data}")
    #header = ROOT.TLatex()
    #header.SetTextSize(0.03)
    #header.DrawLatexNDC(0.63, 0.92, "#sqrt{s} = 8 TeV, L_{int} = 11.6 fb^{-1}")

    # Save plot
    if(not os.path.exists(outDir)):
        os.makedirs(outDir)
    d.SaveAs(f"{outDir}/{title}.pdf")
'''
def EvaluateConfInt(histo):
    mean, sigma, entries = histo.GetMean(),histo.GetStdDev(),histo.GetEntries()
    conf_int = stats.norm.interval(0.68, loc=mean, scale=sigma/np.sqrt(entries))
    return conf_int

def EvaluateDiffInt(histo):
    step = 0.001
    bins_x = []
    bins_y = []
    n_bins = histo.GetNbinsX()
    for i in range(0, n_bins):
        bins_x.append(histo.GetBinCenter(i))
        bins_y.append(histo.GetBinContent(i))
    #print(bins_x, bins_y)
    q = np.arange(0, 1 + step, step)
    x_q = np.quantile(bins_x, 0.5)
    print(x_q)
    return x_q

for ch in ['eTau']:#,'muTau', 'tauTau']:
  outDir= f"output/{ch}"
  myfile = ROOT.TFile( f"output/{ch}/AllHistos.root", 'READ' )
  hist_Two_bGenJets_invMass= myfile.Get("Two_bGenJets_invMass")
  #hist_Two_bGenJets_invMass.GetXaxis().SetRangeUser(0, 200)
  EvaluateDiffInt(hist_Two_bGenJets_invMass)

  confInt_scipy = EvaluateConfInt(hist_Two_bGenJets_invMass)
  mean = hist_Two_bGenJets_invMass.GetMean()
  print(hist_Two_bGenJets_invMass.GetBinCenter(5),hist_Two_bGenJets_invMass.GetBinCenter(6),hist_Two_bGenJets_invMass.GetBinCenter(7))
  print( hist_Two_bGenJets_invMass.FindBin(mean))
  print( hist_Two_bGenJets_invMass.FindBin(confInt_scipy[0]))
  print( hist_Two_bGenJets_invMass.FindBin(confInt_scipy[1]))

  print(f"channel {ch} histogram {hist_Two_bGenJets_invMass.GetTitle()} conf int with scipy = {confInt_scipy}")
  hist_Two_bGenJets_invMass_canvas = ROOT.TCanvas()
  hist_Two_bGenJets_invMass_canvas.cd()
  hist_Two_bGenJets_invMass.Draw()
  hist_Two_bGenJets_invMass_canvas.Update()
  input()
  hist_Two_bGenJets_invMass_cumulative_canvas = ROOT.TCanvas()
  hist_Two_bGenJets_invMass_cumulative_canvas.cd()
  hist_Two_bGenJets_invMass_cumulative = hist_Two_bGenJets_invMass.GetCumulative()
  print(hist_Two_bGenJets_invMass_cumulative.GetBinContent(bin_mean))
  print(hist_Two_bGenJets_invMass_cumulative.GetBinContent(bin_down))
  print(hist_Two_bGenJets_invMass_cumulative.GetBinContent(bin_up))
  hist_Two_bGenJets_invMass_cumulative.Draw()
  hist_Two_bGenJets_invMass_cumulative_canvas.Update()

  input()
  diff_values_Two_bGenJets_invMass = EvaluateDiffInt(hist_Two_bGenJets_invMass)
  hist_Greater2_GenJets_b_2MostEnergeticsMass= myfile.Get("Two_MostEnergetic_bGenJets_invMass")
  print(f"channel {ch} histogram {hist_Greater2_GenJets_b_2MostEnergeticsMass.GetTitle()} conf int with scipy = {EvaluateConfInt(hist_Greater2_GenJets_b_2MostEnergeticsMass)}")
  hist_Greater2_GenJets_b_2MostEnergeticsMass_canvas = ROOT.TCanvas()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_canvas.cd()
  hist_Greater2_GenJets_b_2MostEnergeticsMass.Draw()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_canvas.Update()
  input()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_cumulative_canvas = ROOT.TCanvas()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_cumulative_canvas.cd()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_cumulative = hist_Greater2_GenJets_b_2MostEnergeticsMass.GetCumulative()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_cumulative.Draw()
  hist_Greater2_GenJets_b_2MostEnergeticsMass_cumulative_canvas.Update()
  input()
  diff_values_Two_MostEnergetic_bGenJets_invMass = EvaluateDiffInt(hist_Greater2_GenJets_b_2MostEnergeticsMass)
  hist_Greater2_GenJets_b_allMass= myfile.Get("all_bGenJets_invMass")
  print(f"channel {ch} histogram {hist_Greater2_GenJets_b_allMass.GetTitle()} conf int with scipy = {EvaluateConfInt(hist_Greater2_GenJets_b_allMass)}")
  hist_Greater2_GenJets_b_allMass_canvas = ROOT.TCanvas()
  hist_Greater2_GenJets_b_allMass_canvas.cd()
  hist_Greater2_GenJets_b_allMass.Draw()
  hist_Greater2_GenJets_b_allMass_canvas.Update()
  input()
  hist_Greater2_GenJets_b_allMass_cumulative_canvas = ROOT.TCanvas()
  hist_Greater2_GenJets_b_allMass_cumulative_canvas.cd()
  hist_Greater2_GenJets_b_allMass_cumulative = hist_Greater2_GenJets_b_allMass.GetCumulative()
  hist_Greater2_GenJets_b_allMass_cumulative.Draw()
  hist_Greater2_GenJets_b_allMass_cumulative_canvas.Update()
  input()
  diff_values_all_bGenJets_invMass = EvaluateDiffInt(hist_Greater2_GenJets_b_allMass)
  hist_Two_LastHadrons_invMass= myfile.Get("Two_LastHadrons_invMass")
  print(f"channel {ch} histogram {hist_Two_LastHadrons_invMass.GetTitle()} conf int with scipy = {EvaluateConfInt(hist_Two_LastHadrons_invMass)}")
  hist_Two_LastHadrons_invMass_canvas = ROOT.TCanvas()
  hist_Two_LastHadrons_invMass_canvas.cd()
  hist_Two_LastHadrons_invMass.Draw()
  hist_Two_LastHadrons_invMass_canvas.Update()
  input()
  hist_Two_LastHadrons_invMass_cumulative_canvas = ROOT.TCanvas()
  hist_Two_LastHadrons_invMass_cumulative_canvas.cd()
  hist_Two_LastHadrons_invMass_cumulative = hist_Two_LastHadrons_invMass.GetCumulative()
  hist_Two_LastHadrons_invMass_cumulative.Draw()
  hist_Two_LastHadrons_invMass_cumulative_canvas.Update()
  input()
  diff_values_Two_LastHadrons_invMass = EvaluateDiffInt(hist_Two_LastHadrons_invMass)
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass= myfile.Get("Two_MostEnergetic_LastHadrons_invMass")
  print(f"channel {ch} histogram {hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass.GetTitle()} conf int with scipy = {EvaluateConfInt(hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass)}")
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_canvas = ROOT.TCanvas()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_canvas.cd()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass.Draw()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_canvas.Update()
  input()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_cumulative_canvas = ROOT.TCanvas()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_cumulative_canvas.cd()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_cumulative = hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass.GetCumulative()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_cumulative.Draw()
  hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass_cumulative_canvas.Update()
  input()
  diff_values_Two_MostEnergetic_LastHadrons_invMass = EvaluateDiffInt(hist_Greater2lastHadrons_fromHbb_2MostEnergeticsMass)
  hist_Greater2lastHadrons_fromHbb_allMass= myfile.Get("all_LastHadrons_invMass")
  print(f"channel {ch} histogram {hist_Greater2lastHadrons_fromHbb_allMass.GetTitle()} conf int with scipy = {EvaluateConfInt(hist_Greater2lastHadrons_fromHbb_allMass)}")
  hist_Greater2lastHadrons_fromHbb_allMass_canvas = ROOT.TCanvas()
  hist_Greater2lastHadrons_fromHbb_allMass_canvas.cd()
  hist_Greater2lastHadrons_fromHbb_allMass.Draw()
  hist_Greater2lastHadrons_fromHbb_allMass_canvas.Update()
  input()
  hist_Greater2lastHadrons_fromHbb_allMass_cumulative_canvas = ROOT.TCanvas()
  hist_Greater2lastHadrons_fromHbb_allMass_cumulative_canvas.cd()
  hist_Greater2lastHadrons_fromHbb_allMass_cumulative = hist_Greater2lastHadrons_fromHbb_allMass.GetCumulative()
  hist_Greater2lastHadrons_fromHbb_allMass_cumulative.Draw()
  hist_Greater2lastHadrons_fromHbb_allMass_cumulative_canvas.Update()
  input()
  diff_values_all_LastHadrons_invMass = EvaluateDiffInt(hist_Greater2lastHadrons_fromHbb_allMass)
  '''
